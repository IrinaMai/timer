{"version":3,"sources":["components/TimerClock.js","components/Timer.js","App.js","index.js","components/TimerClock.module.css"],"names":["TimerClock","hours","minutes","seconds","isActive","hndlClick","hdlWait","hndlReset","className","timerWrapper","timer","btnWrapper","type","onClick","timerBtn","initialState","startTime","pauseLong","Timer","state","intervalId","clickCounter","firstClick","secondClick","clearInterval","setState","timeOut","isNaN","Number","Date","now","prev","setInterval","diffTime","updateTimer","time","String","Math","floor","padStart","this","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wNAkDeA,EA1CI,SAAC,GAQb,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,QACAC,EAKI,EALJA,QACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,QACAC,EACI,EADJA,UAYA,OACE,qCACE,qBAAKC,UAAWC,eAAhB,SACE,oBAAGD,UAAWE,QAAd,UACGT,EADH,KACYC,EADZ,KACuBC,OAGzB,sBAAKK,UAAWG,aAAhB,UACE,wBAAQC,KAAK,SAASC,QAlBP,WACnBR,KAiBiDG,UAAWM,WAAxD,SACGV,EAAW,QAAU,SAGxB,wBAAQQ,KAAK,SAASC,QAnBR,WAClBP,KAkBgDE,UAAWM,WAAvD,kBAGA,wBAAQF,KAAK,SAASC,QAnBP,WACnBN,KAkBiDC,UAAWM,WAAxD,0BCvCFC,EAAe,CACnBd,MAAO,KACPC,QAAS,KACTC,QAAS,KACTa,UAAW,KACXZ,UAAU,EACVa,UAAW,GAoGEC,E,4MAhGbC,M,eAAaJ,G,EAEbK,WAAa,K,EACbC,aAAe,E,EACfC,WAAa,E,EACbC,YAAc,E,EAEdlB,UAAY,WACV,IAAK,EAAKc,MAAMf,SAGd,OAFAoB,cAAc,EAAKJ,iBACnB,EAAKK,SAAL,eAAmBV,IAGnB,EAAKW,W,EAITA,QAAU,WACJC,MAAMC,OAAO,EAAKT,MAAMhB,UAC1B,EAAKsB,SAAS,CAAErB,UAAU,EAAOY,UAAWa,KAAKC,QAEjD,EAAKL,UAAS,SAACM,GAAD,MAAW,CACvB3B,UAAU,EACVY,UAAWe,EAAKf,WAAaa,KAAKC,MAAQ,EAAKX,MAAMF,eAGzD,EAAKG,WAAaY,aAAY,WAC5B,IAAMC,EAAWJ,KAAKC,MAAQ,EAAKX,MAAMH,UACzC,EAAKkB,YAAYD,KAChB,M,EAGLC,YAAc,SAACC,GACb,EAAKV,SAAS,CACZxB,MAAOmC,OACLC,KAAKC,MAAOH,EAAI,MAAL,OACXI,SAAS,EAAG,KACdrC,QAASkC,OACPC,KAAKC,MAAOH,EAAI,KAAL,MACXI,SAAS,EAAG,KACdpC,QAASiC,OAAOC,KAAKC,MAAOH,EAAI,IAAkB,MAAOI,SAAS,EAAG,Q,EAIzEjC,QAAU,WAER,GADA,EAAKe,cAAgB,EACK,IAAtB,EAAKA,aACP,EAAKC,WAAaO,KAAKC,WAClB,GAA0B,IAAtB,EAAKT,aAAoB,CAGlC,GAFA,EAAKE,YAAcM,KAAKC,QACX,EAAKP,YAAc,EAAKD,WAC1B,KAST,YADA,EAAKD,aAAe,GAPpBG,cAAc,EAAKJ,YACnB,EAAKK,SAAS,CACZrB,UAAU,EACVa,UAAWY,KAAKC,QAElB,EAAKT,aAAe,I,EAQ1Bd,UAAY,WACN,EAAKY,MAAMf,WAGboB,cAAc,EAAKJ,YACnB,EAAKK,SAAL,2BACKV,GADL,IAEEd,MAAO,KACPC,QAAS,KACTC,QAAS,QAEX,EAAKuB,Y,4CAIT,WAAU,IAAD,EACuCc,KAAKrB,MAA3ClB,EADD,EACCA,MAAOC,EADR,EACQA,QAASC,EADjB,EACiBA,QAASC,EAD1B,EAC0BA,SACjC,OACE,cAAC,EAAD,CACEH,MAAOA,EACPC,QAASA,EACTC,QAASA,EACTC,SAAUA,EACVC,UAAWmC,KAAKnC,UAChBE,UAAWiC,KAAKjC,UAChBD,QAASkC,KAAKlC,c,GA3FFmC,aCLLC,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,aAAe,iCAAiC,WAAa,+BAA+B,SAAW,6BAA6B,MAAQ,6B","file":"static/js/main.c21a9e99.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  timerWrapper,\r\n  btnWrapper,\r\n  timerBtn,\r\n  timer,\r\n} from \"./TimerClock.module.css\";\r\n\r\nconst TimerClock = ({\r\n  hours,\r\n  minutes,\r\n  seconds,\r\n  isActive,\r\n  hndlClick,\r\n  hdlWait,\r\n  hndlReset,\r\n}) => {\r\n  const onClickStart = () => {\r\n    hndlClick();\r\n  };\r\n  const onClickWait = () => {\r\n    hdlWait();\r\n  };\r\n  const onClickReset = () => {\r\n    hndlReset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={timerWrapper}>\r\n        <p className={timer}>\r\n          {hours}: {minutes}: {seconds}\r\n        </p>\r\n      </div>\r\n      <div className={btnWrapper}>\r\n        <button type=\"button\" onClick={onClickStart} className={timerBtn}>\r\n          {isActive ? \"Start\" : \"Stop\"}\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={onClickWait} className={timerBtn}>\r\n          Wait\r\n        </button>\r\n        <button type=\"button\" onClick={onClickReset} className={timerBtn}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TimerClock;\r\n","import React, { Component } from \"react\";\r\nimport TimerClock from \"./TimerClock\";\r\n\r\nconst initialState = {\r\n  hours: \"HH\",\r\n  minutes: \"MM\",\r\n  seconds: \"SS\",\r\n  startTime: null,\r\n  isActive: true,\r\n  pauseLong: 0,\r\n};\r\n\r\nclass Timer extends Component {\r\n  state = { ...initialState };\r\n\r\n  intervalId = null;\r\n  clickCounter = 0;\r\n  firstClick = 0;\r\n  secondClick = 0;\r\n\r\n  hndlClick = () => {\r\n    if (!this.state.isActive) {\r\n      clearInterval(this.intervalId);\r\n      this.setState({ ...initialState });\r\n      return;\r\n    } else {\r\n      this.timeOut();\r\n    }\r\n  };\r\n\r\n  timeOut = () => {\r\n    if (isNaN(Number(this.state.seconds))) {\r\n      this.setState({ isActive: false, startTime: Date.now() });\r\n    } else {\r\n      this.setState((prev) => ({\r\n        isActive: false,\r\n        startTime: prev.startTime + (Date.now() - this.state.pauseLong),\r\n      }));\r\n    }\r\n    this.intervalId = setInterval(() => {\r\n      const diffTime = Date.now() - this.state.startTime;\r\n      this.updateTimer(diffTime);\r\n    }, 1000);\r\n  };\r\n\r\n  updateTimer = (time) => {\r\n    this.setState({\r\n      hours: String(\r\n        Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n      ).padStart(2, \"0\"),\r\n      minutes: String(\r\n        Math.floor((time % (1000 * 60 * 60)) / (1000 * 60))\r\n      ).padStart(2, \"0\"),\r\n      seconds: String(Math.floor((time % (1000 * 60)) / 1000)).padStart(2, \"0\"),\r\n    });\r\n  };\r\n\r\n  hdlWait = () => {\r\n    this.clickCounter += 1;\r\n    if (this.clickCounter === 1) {\r\n      this.firstClick = Date.now();\r\n    } else if (this.clickCounter === 2) {\r\n      this.secondClick = Date.now();\r\n      const diff = this.secondClick - this.firstClick;\r\n      if (diff < 300) {\r\n        clearInterval(this.intervalId);\r\n        this.setState({\r\n          isActive: true,\r\n          pauseLong: Date.now(),\r\n        });\r\n        this.clickCounter = 0;\r\n      } else {\r\n        this.clickCounter = 0;\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  hndlReset = () => {\r\n    if (this.state.isActive) {\r\n      return;\r\n    } else {\r\n      clearInterval(this.intervalId);\r\n      this.setState({\r\n        ...initialState,\r\n        hours: \"00\",\r\n        minutes: \"00\",\r\n        seconds: \"00\",\r\n      });\r\n      this.timeOut();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { hours, minutes, seconds, isActive } = this.state;\r\n    return (\r\n      <TimerClock\r\n        hours={hours}\r\n        minutes={minutes}\r\n        seconds={seconds}\r\n        isActive={isActive}\r\n        hndlClick={this.hndlClick}\r\n        hndlReset={this.hndlReset}\r\n        hdlWait={this.hdlWait}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\nimport Timer from \"./components/Timer\";\n\nfunction App() {\n  return <Timer />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerWrapper\":\"TimerClock_timerWrapper__3_eEL\",\"btnWrapper\":\"TimerClock_btnWrapper__3rl7J\",\"timerBtn\":\"TimerClock_timerBtn__FeB0P\",\"timer\":\"TimerClock_timer__1gbJ3\"};"],"sourceRoot":""}